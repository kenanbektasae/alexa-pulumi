---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Fargate: service that runs on a Fargate cluster based on fargate-cluster-alb.yaml and uses the cluster ALB'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: 'Parent Stacks'
        Parameters:
          - ParentVPCStack
          - ParentClusterStack
          - ParentECRRepositoryStack
          - ParentAlertStack
          - ParentZoneStack
          - ParentClientStack1
          - ParentClientStack2
          - ParentClientStack3
      - Label:
          default: 'Load Balancer Parameters'
        Parameters:
          - LoadBalancerPriority
          - LoadBalancerHostPattern
          - LoadBalancerPathPattern
          # HTTPS Only
          # - LoadBalancerHttps
          - LoadBalancerDeregistrationDelay
          - LoadBalancerStickiness
      - Label:
          default: 'Task Parameters'
        Parameters:
          - TaskPolicies
          - ProxyImage
          - ProxyCommand
          - ProxyPort
          - ProxyEnvironment1Key
          - ProxyEnvironment1Value
          - ProxyEnvironment2Key
          - ProxyEnvironment2Value
          - ProxyEnvironment3Key
          - ProxyEnvironment3Value
          - AppCommand
          - AppUser
          - AppPort
          - AppEnvironment1Key
          - AppEnvironment1Value
          - AppEnvironment2Key
          - AppEnvironment2Value
          - AppEnvironment3Key
          - AppEnvironment3Value
          - AppLogDriver
          - SidecarImage
          - SidecarRepositoryCredentials
          - SidecarCommand
          - SidecarPort
          - SidecarEnvironment1Key
          - SidecarEnvironment1Value
          - SidecarEnvironment2Key
          - SidecarEnvironment2Value
          - SidecarEnvironment3Key
          - SidecarEnvironment3Value
      - Label:
          default: 'Sidecar Wiz.io Parameters'
        Parameters:
          - EnableWiz
          - WizApiClientSecret
      - Label:
          default: 'Sidecar aws-for-fluent-bit Parameters'
        Parameters:
          - EnableFireLens
          - FluentBitConfigFile
      - Label:
          default: 'Sidecar Datadog Agent Parameters'
        Parameters:
          - EnableDatadogAgent
          - DatadogApiKeySecret
          - DatadogAgentDDSource
      - Label:
          default: 'Service Parameters'
        Parameters:
          - SubDomainNameWithDot
          - DNSRecordWeight
          - Cpu
          - Memory
          - EphemeralStorage
          - CpuArchitecture
          - SubnetsReach
          - AutoScaling
          - DesiredCount
          - MaxCapacity
          - MinCapacity
          - HealthCheckPath
          - HealthCheckGracePeriod
          - LogsRetentionInDays
      - Label:
          default: 'AutoScaling Policy Parameters'
        Parameters:
          - ScaleUpPolicyCooldown
          - ScaleUpPolicyScalingAdjustment
          - ScaleDownPolicyCooldown
          - ScaleDownPolicyScalingAdjustment
          - AutoScalingCPUHighAlarmThreshold
          - AutoScalingCPUHighAlarmPeriod
          - AutoScalingCPUHighAlarmEvaluationPeriods
          - AutoScalingCPULowAlarmThreshold
          - AutoScalingCPULowAlarmPeriod
          - AutoScalingCPULowAlarmEvaluationPeriods
      - Label:
          default: 'Monitoring Parameters'
        Parameters:
          - HTTPCodeTarget5XXTooHighAlarmThreshold
          - HTTPCodeTarget5XXTooHighAlarmPeriod
          - HTTPCodeTarget5XXTooHighAlarmEvaluationPeriods
          - TargetConnectionErrorCountTooHighAlarmThreshold
          - TargetConnectionErrorCountTooHighAlarmPeriod
          - TargetConnectionErrorCountTooHighAlarmEvaluationPeriods
          - CPUUtilizationTooHighAlarmThreshold
          - CPUUtilizationTooHighAlarmPeriod
          - CPUUtilizationTooHighAlarmEvaluationPeriods
          - MemoryUtilizationTooHighAlarmThreshold
          - MemoryUtilizationTooHighAlarmPeriod
          - MemoryUtilizationTooHighAlarmEvaluationPeriods
Parameters:
  ParentVPCStack:
    Description: 'Stack name of parent VPC stack based on base/vpc-*azs.yaml template.'
    Type: String
  ParentClusterStack:
    Description: 'Stack name of parent Cluster stack based on base/fargate-cluster-alb.yaml template.'
    Type: String
  ParentECRRepositoryStack:
    Description: 'Required name of parent ECR repository stack based on base/ecr-*.yaml.'
    Type: String
  ParentAlertStack:
    Description: 'Optional but recommended stack name of parent alert stack based on base/alert.yaml template.'
    Type: String
    Default: ''
  ParentZoneStack:
    Description: 'Optional stack name of parent zone stack based on base/zone-*.yaml template.'
    Type: String
    Default: ''
  ParentClientStack1:
    Description: 'Optional stack name of parent Client Security Group stack based on base/client-sg.yaml template to allow network access from the service to whatever uses the client security group.'
    Type: String
    Default: ''
  ParentClientStack2:
    Description: 'Optional stack name of parent Client Security Group stack based on base/client-sg.yaml template to allow network access from the service to whatever uses the client security group.'
    Type: String
    Default: ''
  ParentClientStack3:
    Description: 'Optional stack name of parent Client Security Group stack based on base/client-sg.yaml template to allow network access from the service to whatever uses the client security group.'
    Type: String
    Default: ''
  LoadBalancerPriority:
    Description: 'The priority for the rule. Elastic Load Balancing evaluates rules in priority order, from the lowest value to the highest value. If a request satisfies a rule, Elastic Load Balancing ignores all subsequent rules. A target group can have only one rule with a given priority.'
    Type: Number
    Default: 1
    ConstraintDescription: 'Must be in the range [1-99999]'
    MinValue: 1
    MaxValue: 99999
  LoadBalancerHostPattern:
    Description: 'Optional pipe delimited list of host pattern. Specify LoadBalancerPathPattern and/or LoadBalancerHostPattern.'
    Type: String
    Default: ''
  LoadBalancerPathPattern:
    Description: 'Optional pipe delimited list of path pattern. Specify LoadBalancerPathPattern and/or LoadBalancerHostPattern.'
    Type: String
    Default: '/*'
  # HTTPS Only
  # LoadBalancerHttps:
  #   Description: 'If the cluster supports HTTPS (LoadBalancerCertificateArn is set) you can enable HTTPS for the service'
  #   Type: String
  #   Default: false
  #   AllowedValues:
  #     - true
  #     - false
  LoadBalancerDeregistrationDelay:
    Description: 'The amount time (in seconds) to wait before changing the state of a deregistering target from draining to unused.'
    Type: Number
    Default: 60
    ConstraintDescription: 'Must be in the range [0-3600]'
    MinValue: 0
    MaxValue: 3600
  LoadBalancerStickiness:
    Description: 'Indicates whether sticky sessions are enabled on load balancer'
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
  TaskPolicies:
    Description: 'Comma-delimited list of IAM managed policy ARNs to attach to the task IAM role'
    Type: String
    Default: ''
  ProxyImage:
    Description: 'Optional Docker image to use for the proxy container. You can use images in the Docker Hub registry or specify other repositories (repository-url/image:tag).'
    Type: String
    Default: ''
  ProxyCommand:
    Description: 'Optional command used when starting the proxy container.'
    Type: String
    Default: ''
  ProxyPort:
    Description: 'The port exposed by the proxy container that receives traffic from the load balancer (ProxyPort <> AppPort <> SidecarPort; ignored if ProxyImage is not set).'
    Type: Number
    Default: 8000
    MinValue: 1
    MaxValue: 49150
  ProxyEnvironment1Key:
    Description: 'Optional environment variable 1 key for proxy container.'
    Type: String
    Default: ''
  ProxyEnvironment1Value:
    Description: 'Optional environment variable 1 value for proxy container.'
    Type: String
    Default: ''
  ProxyEnvironment2Key:
    Description: 'Optional environment variable 2 key for proxy container.'
    Type: String
    Default: ''
  ProxyEnvironment2Value:
    Description: 'Optional environment variable 2 value for proxy container.'
    Type: String
    Default: ''
  ProxyEnvironment3Key:
    Description: 'Optional environment variable 3 key for proxy container.'
    Type: String
    Default: ''
  ProxyEnvironment3Value:
    Description: 'Optional environment variable 3 value for proxy container.'
    Type: String
    Default: ''
  AppCommand:
    Description: 'Optional commands (comma-delimited) used when starting the app container.'
    Type: String
    Default: ''
  AppUser:
    Description: 'Optional user name to use inside the container.'
    Type: String
    Default: ''
  AppPort:
    Description: 'The port exposed by the app container that receives traffic from the load balancer or the proxy container (AppPort <> ProxyPort <> SidecarPort).'
    Type: Number
    Default: 80
    MinValue: 1
    MaxValue: 49150
  AppEnvironment1Key:
    Description: 'Optional environment variable 1 key for app container.'
    Type: String
    Default: ''
  AppEnvironment1Value:
    Description: 'Optional environment variable 1 value for app container.'
    Type: String
    Default: ''
  AppEnvironment2Key:
    Description: 'Optional environment variable 2 key for app container.'
    Type: String
    Default: ''
  AppEnvironment2Value:
    Description: 'Optional environment variable 2 value for app container.'
    Type: String
    Default: ''
  AppEnvironment3Key:
    Description: 'Optional environment variable 3 key for app container.'
    Type: String
    Default: ''
  AppEnvironment3Value:
    Description: 'Optional environment variable 3 value for app container.'
    Type: String
    Default: ''
  AppLogDriver:
    Description: 'Required log driver to use for the container.'
    Type: String
    Default: awslogs
    AllowedValues: [awslogs, awsfirelens]
  SidecarImage:
    Description: 'Optional Docker image to use for the sidecar container. You can use images in the Docker Hub registry or specify other repositories (repository-url/image:tag).'
    Type: String
    Default: ''
  SidecarCommand:
    Description: 'Optional command used when starting the sidecar container.'
    Type: String
    Default: ''
  SidecarPort:
    Description: 'The port exposed by the sidecar container reachable from the app container on host localhost (SidecarPort <> ProxyPort <> AppPort).'
    Type: Number
    Default: 9000
    MinValue: 1
    MaxValue: 49150
  SidecarRepositoryCredentials:
    Description: 'Optional secret name for repository credentials.'
    Type: String
    Default: ''
  SidecarEnvironment1Key:
    Description: 'Optional environment variable 1 key for sidecar container.'
    Type: String
    Default: ''
  SidecarEnvironment1Value:
    Description: 'Optional environment variable 1 value for sidecar container.'
    Type: String
    Default: ''
  SidecarEnvironment2Key:
    Description: 'Optional environment variable 2 key for sidecar container.'
    Type: String
    Default: ''
  SidecarEnvironment2Value:
    Description: 'Optional environment variable 2 value for sidecar container.'
    Type: String
    Default: ''
  SidecarEnvironment3Key:
    Description: 'Optional environment variable 3 key for sidecar container.'
    Type: String
    Default: ''
  SidecarEnvironment3Value:
    Description: 'Optional environment variable 3 value for sidecar container.'
    Type: String
    Default: ''
  EnableWiz:
    Description: 'Enable Wiz.io sensor-serverless container.'
    Type: String
    Default: false
    AllowedValues: [true, false]
  WizApiClientSecret:
    Description: 'Optional wiz.io client key.'
    Type: String
    Default: ''
  EnableFireLens:
    Description: 'Enable aws-for-fluent-bit container for AWS FireLens.'
    Type: String
    Default: false
    AllowedValues: [true, false]
  FluentBitConfigFile:
    Description: 'Required aws-for-fluent-bit configuration file.'
    Type: String
    Default: ''
  EnableDatadogAgent:
    Description: 'Enable Datadog Agent container.'
    Type: String
    Default: false
    AllowedValues: [true, false]
  DatadogApiKeySecret:
    Description: 'Optional Datadog API Key Secret.'
    Type: String
    Default: ''
  DatadogAgentDDSource:
    Description: 'Required human readable name for the underlying technology of your service.'
    Type: String
    Default: 'app'
  SubDomainNameWithDot:
    Description: 'Name that is used to create the DNS entry with trailing dot, e.g. ?{SubDomainNameWithDot}?{HostedZoneName}. Leave blank for naked (or apex and bare) domain. Requires ParentZoneStack parameter!'
    Type: String
    Default: ''
  DNSRecordWeight:
    Description: 'DNS Record Weight (0 - no traffic, 50 - 50% traffic, assuming total 100 for all DNS entries)'
    Type: Number
    MinValue: 0
    MaxValue: 255
    Default: 50
  Cpu:
    Description: 'The minimum number of vCPUs to reserve for the container.'
    Type: String
    Default: '0.25'
    AllowedValues: ['0.25', '0.5', '1', '2', '4', '8', '16']
  Memory:
    Description: 'The amount (in GB) of memory used by the task.'
    Type: String
    Default: '0.5'
    AllowedValues: ['0.5', '1', '2', '4', '6', '8', '10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '36', '40', '44', '48', '52', '56', '60', '64', '72', '80', '88', '96', '104', '112', '120']
  EphemeralStorage:
    Description: 'The total amount of ephemeral storage to set for the task in GiB.'
    Type: Number
    Default: 21
    MinValue: 21
    MaxValue: 200
  CpuArchitecture:
    Description: 'The CPU architecture.'
    Type: String
    Default: 'X86_64'
    AllowedValues: ['X86_64', 'ARM64']
  DesiredCount:
    Description: 'The number of simultaneous tasks, that you want to run on the cluster.'
    Type: Number
    Default: 0
  MaxCapacity:
    Description: 'The maximum number of simultaneous tasks, that you want to run on the cluster.'
    Type: Number
    Default: 1
  MinCapacity:
    Description: 'The minimum number of simultaneous tasks, that you want to run on the cluster.'
    Type: Number
    Default: 0
  LogsRetentionInDays:
    Description: 'Specifies the number of days you want to retain log events in the specified log group.'
    Type: Number
    Default: 14
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
  SubnetsReach:
    Description: 'Should the service have direct access to the Internet or do you prefer private subnets with NAT?'
    Type: String
    Default: Public
    AllowedValues:
      - Public
      - Private
  AutoScaling:
    Description: 'Scale number of tasks based on CPU load?'
    Type: String
    Default: 'true'
    AllowedValues: ['true', 'false']
  HealthCheckPath:
    Description: 'The url that is the destination on the targets for health checks.'
    Type: String
  HealthCheckGracePeriod:
    Description: 'The period of time, in seconds, that the Amazon ECS service scheduler ignores unhealthy Elastic Load Balancing target health checks after a task has first started.'
    Type: Number
    Default: 60
    MinValue: 0
    MaxValue: 1800
  ScaleUpPolicyCooldown:
    Description: 'Scale up Policy cooldown period in seconds.'
    Type: Number
    Default: 120
  ScaleUpPolicyScalingAdjustment:
    Description: 'Scale up policy percentage by which to scale task count.'
    Type: Number
    Default: 25
  ScaleDownPolicyCooldown:
    Description: 'Scale down Policy cooldown period in seconds.'
    Type: Number
    Default: 300
  ScaleDownPolicyScalingAdjustment:
    Description: 'Scale down policy percentage by which to scale task count.'
    Type: Number
    Default: -25
  AutoScalingCPUHighAlarmThreshold:
    Description: 'Threshold for CPUUtilizationHighAlarm'
    Type: Number
    Default: 60
  AutoScalingCPUHighAlarmPeriod:
    Description: 'Period for CPUUtilizationHighAlarm'
    Type: Number
    Default: 60
  AutoScalingCPUHighAlarmEvaluationPeriods:
    Description: 'EvaluationPeriods for CPUUtilizationHighAlarm'
    Type: Number
    Default: 1
  AutoScalingCPULowAlarmThreshold:
    Description: 'Threshold for CPUUtilizationLowAlarm'
    Type: Number
    Default: 30
  AutoScalingCPULowAlarmPeriod:
    Description: 'Period for CPUUtilizationLowAlarm'
    Type: Number
    Default: 300
  AutoScalingCPULowAlarmEvaluationPeriods:
    Description: 'EvaluationPeriods for CPUUtilizationLowAlarm'
    Type: Number
    Default: 3
  HTTPCodeTarget5XXTooHighAlarmThreshold:
    Description: 'Threshold for HTTPCodeTarget5XXTooHighAlarm'
    Type: Number
    Default: 100
  HTTPCodeTarget5XXTooHighAlarmPeriod:
    Description: 'Period for HTTPCodeTarget5XXTooHighAlarm'
    Type: Number
    Default: 60
  HTTPCodeTarget5XXTooHighAlarmEvaluationPeriods:
    Description: 'EvaluationPeriods for HTTPCodeTarget5XXTooHighAlarm'
    Type: Number
    Default: 5
  TargetConnectionErrorCountTooHighAlarmThreshold:
    Description: 'Threshold for TargetConnectionErrorCountTooHighAlarm'
    Type: Number
    Default: 100
  TargetConnectionErrorCountTooHighAlarmPeriod:
    Description: 'Period for TargetConnectionErrorCountTooHighAlarm'
    Type: Number
    Default: 60
  TargetConnectionErrorCountTooHighAlarmEvaluationPeriods:
    Description: 'EvaluationPeriods for TargetConnectionErrorCountTooHighAlarm'
    Type: Number
    Default: 5
  CPUUtilizationTooHighAlarmThreshold:
    Description: 'Threshold for CPUUtilizationTooHighAlarm'
    Type: Number
    Default: 90
  CPUUtilizationTooHighAlarmPeriod:
    Description: 'Period for CPUUtilizationTooHighAlarm'
    Type: Number
    Default: 60
  CPUUtilizationTooHighAlarmEvaluationPeriods:
    Description: 'EvaluationPeriods for CPUUtilizationTooHighAlarm'
    Type: Number
    Default: 5
  MemoryUtilizationTooHighAlarmThreshold:
    Description: 'Threshold for MemoryUtilizationTooHighAlarm'
    Type: Number
    Default: 90
  MemoryUtilizationTooHighAlarmPeriod:
    Description: 'Period for MemoryUtilizationTooHighAlarm'
    Type: Number
    Default: 60
  MemoryUtilizationTooHighAlarmEvaluationPeriods:
    Description: 'EvaluationPeriods for MemoryUtilizationTooHighAlarm'
    Type: Number
    Default: 5
Mappings:
  CpuMap:
    '0.25':
      Cpu: 256
    '0.5':
      Cpu: 512
    '1':
      Cpu: 1024
    '2':
      Cpu: 2048
    '4':
      Cpu: 4096
    '8':
      Cpu: 8192
    '16':
      Cpu: 16384
  MemoryMap:
    '0.5':
      Memory: 512
    '1':
      Memory: 1024
    '2':
      Memory: 2048
    '3':
      Memory: 3072
    '4':
      Memory: 4096
    '5':
      Memory: 5120
    '6':
      Memory: 6144
    '7':
      Memory: 7168
    '8':
      Memory: 8192
    '9':
      Memory: 9216
    '10':
      Memory: 10240
    '11':
      Memory: 11264
    '12':
      Memory: 12288
    '13':
      Memory: 13312
    '14':
      Memory: 14336
    '15':
      Memory: 15360
    '16':
      Memory: 16384
    '17':
      Memory: 17408
    '18':
      Memory: 18432
    '19':
      Memory: 19456
    '20':
      Memory: 20480
    '21':
      Memory: 21504
    '22':
      Memory: 22528
    '23':
      Memory: 23552
    '24':
      Memory: 24576
    '25':
      Memory: 25600
    '26':
      Memory: 26624
    '27':
      Memory: 27648
    '28':
      Memory: 28672
    '29':
      Memory: 29696
    '30':
      Memory: 30720
    '31':
      Memory: 31744
    '32':
      Memory: 32768
Conditions:
  # HTTPS Only
  # HasLoadBalancerHttps: !Equals [!Ref LoadBalancerHttps, 'true']
  HasLoadBalancerPathPattern: !Not [!Equals [!Ref LoadBalancerPathPattern, '']]
  HasLoadBalancerHostPattern: !Not [!Equals [!Ref LoadBalancerHostPattern, '']]
  HasAlertTopic: !Not [!Equals [!Ref ParentAlertStack, '']]
  HasZone: !Not [!Equals [!Ref ParentZoneStack, '']]
  HasSubnetsReachPublic: !Equals [!Ref SubnetsReach, Public]
  HasAutoScaling: !Equals [!Ref AutoScaling, 'true']
  HasClientSecurityGroup1: !Not [!Equals [!Ref ParentClientStack1, '']]
  HasClientSecurityGroup2: !Not [!Equals [!Ref ParentClientStack2, '']]
  HasClientSecurityGroup3: !Not [!Equals [!Ref ParentClientStack3, '']]
  HasLoadBalancerStickiness: !Equals [!Ref LoadBalancerStickiness, 'true']
  HasTaskPolicies: !Not [!Equals [!Ref TaskPolicies, '']]
  HasAppCommand: !Not [!Equals [!Ref AppCommand, '']]
  HasAppUser: !Not [!Equals [!Ref AppUser, '']]
  HasAppEnvironment1Key: !Not [!Equals [!Ref AppEnvironment1Key, '']]
  HasAppEnvironment2Key: !Not [!Equals [!Ref AppEnvironment2Key, '']]
  HasAppEnvironment3Key: !Not [!Equals [!Ref AppEnvironment3Key, '']]
  HasAppFireLens: !Not [!Equals [!Ref AppLogDriver, 'awslogs']]
  HasProxyImage: !Not [!Equals [!Ref ProxyImage, '']]
  HasProxyCommand: !Not [!Equals [!Ref ProxyCommand, '']]
  HasProxyEnvironment1Key: !Not [!Equals [!Ref ProxyEnvironment1Key, '']]
  HasProxyEnvironment2Key: !Not [!Equals [!Ref ProxyEnvironment2Key, '']]
  HasProxyEnvironment3Key: !Not [!Equals [!Ref ProxyEnvironment3Key, '']]
  HasSidecarImage: !Not [!Equals [!Ref SidecarImage, '']]
  HasSidecarCommand: !Not [!Equals [!Ref SidecarCommand, '']]
  HasSidecarRepositoryCredentials: !Not [!Equals [!Ref SidecarRepositoryCredentials, '']]
  HasSidecarEnvironment1Key: !Not [!Equals [!Ref SidecarEnvironment1Key, '']]
  HasSidecarEnvironment2Key: !Not [!Equals [!Ref SidecarEnvironment2Key, '']]
  HasSidecarEnvironment3Key: !Not [!Equals [!Ref SidecarEnvironment3Key, '']]
  HasEnableWiz: !Equals [!Ref EnableWiz, 'true']
  HasEnableFireLens: !Equals [!Ref EnableFireLens, 'true']
  HasFluentBitConfigFile: !Not [!Equals [!Ref FluentBitConfigFile, '']]
  HasEnableDatadogAgent: !Equals [!Ref EnableDatadogAgent, 'true']
Resources:
  RecordSetGroup:
    Condition: HasZone
    Type: 'AWS::Route53::RecordSetGroup'
    Properties:
      HostedZoneId: {'Fn::ImportValue': !Sub '${ParentZoneStack}-HostedZoneId'}
      RecordSets:
        - Type: A
          SetIdentifier: !Sub '${AWS::AccountId}:${AWS::Region}:${AWS::StackName}'
          Name: !Sub
            - '${SubDomainNameWithDot}${HostedZoneName}'
            - SubDomainNameWithDot: !Ref SubDomainNameWithDot
              HostedZoneName: {'Fn::ImportValue': !Sub '${ParentZoneStack}-HostedZoneName'}
          AliasTarget:
            HostedZoneId: {'Fn::ImportValue': !Sub '${ParentClusterStack}-CanonicalHostedZoneID'}
            DNSName: {'Fn::ImportValue': !Sub '${ParentClusterStack}-DNSName'}
            EvaluateTargetHealth: 'true'
          Weight: !Ref DNSRecordWeight
        - Type: AAAA
          SetIdentifier: !Sub '${AWS::AccountId}:${AWS::Region}:${AWS::StackName}'
          Name: !Sub
            - '${SubDomainNameWithDot}${HostedZoneName}'
            - SubDomainNameWithDot: !Ref SubDomainNameWithDot
              HostedZoneName: {'Fn::ImportValue': !Sub '${ParentZoneStack}-HostedZoneName'}
          AliasTarget:
            HostedZoneId: {'Fn::ImportValue': !Sub '${ParentClusterStack}-CanonicalHostedZoneID'}
            DNSName: {'Fn::ImportValue': !Sub '${ParentClusterStack}-DNSName'}
            EvaluateTargetHealth: 'true'
          Weight: !Ref DNSRecordWeight
  TargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: !Ref HealthCheckPath
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Matcher:
        HttpCode: '200-299,401'
      Port: 8080  # overriden when containers are attached
      Protocol: HTTP
      TargetType: ip
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: !Ref LoadBalancerDeregistrationDelay
        - Key: 'stickiness.enabled'
          Value: !If [HasLoadBalancerStickiness, 'true', 'false']
        - !If [HasLoadBalancerStickiness, {Key: 'stickiness.type', Value: 'lb_cookie'}, !Ref 'AWS::NoValue']
        - !If [HasLoadBalancerStickiness, {Key: 'stickiness.lb_cookie.duration_seconds', Value: '60'}, !Ref 'AWS::NoValue']
        - Key: 'load_balancing.algorithm.type'
          Value: 'least_outstanding_requests'
      VpcId: {'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'}
  HTTPCodeTarget5XXTooHighAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Application Load Balancer 5XX Errors Too High'
      Namespace: 'AWS/ApplicationELB'
      MetricName: HTTPCode_Target_5XX_Count
      Dimensions:
        - Name: LoadBalancer
          Value: {'Fn::ImportValue': !Sub '${ParentClusterStack}-LoadBalancerFullName'}
        - Name: TargetGroup
          Value: !GetAtt TargetGroup.TargetGroupFullName
      Statistic: Sum
      Period: !Ref HTTPCodeTarget5XXTooHighAlarmPeriod
      EvaluationPeriods: !Ref HTTPCodeTarget5XXTooHighAlarmEvaluationPeriods
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: !Ref HTTPCodeTarget5XXTooHighAlarmThreshold
      TreatMissingData: notBreaching
      AlarmActions:
        - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
      OKActions:
        - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
  TargetConnectionErrorCountTooHighAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Application Load Balancer Target Errors Too High'
      Namespace: 'AWS/ApplicationELB'
      MetricName: TargetConnectionErrorCount
      Dimensions:
        - Name: LoadBalancer
          Value: {'Fn::ImportValue': !Sub '${ParentClusterStack}-LoadBalancerFullName'}
        - Name: TargetGroup
          Value: !GetAtt TargetGroup.TargetGroupFullName
      Statistic: Sum
      Period: !Ref TargetConnectionErrorCountTooHighAlarmPeriod
      EvaluationPeriods: !Ref TargetConnectionErrorCountTooHighAlarmEvaluationPeriods
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: !Ref TargetConnectionErrorCountTooHighAlarmThreshold
      TreatMissingData: notBreaching
      AlarmActions:
        - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
      OKActions:
        - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
  LoadBalancerListenerRule:
    Type: 'AWS::ElasticLoadBalancingV2::ListenerRule'
    Properties:
      Actions:
        - Type: forward
          ForwardConfig:
            TargetGroups:
              - TargetGroupArn: !Ref TargetGroup
                Weight: 50
            TargetGroupStickinessConfig:
              Enabled: !If [HasLoadBalancerStickiness, 'true', 'false']
              DurationSeconds: 60
      Conditions: !If
        - HasLoadBalancerPathPattern
        - !If
          - HasLoadBalancerHostPattern
          - - Field: host-header
              HostHeaderConfig:
                Values: !Split ['|', !Ref LoadBalancerHostPattern]
            - Field: path-pattern
              PathPatternConfig:
                Values: !Split ['|', !Ref LoadBalancerPathPattern]
          - - Field: path-pattern
              PathPatternConfig:
                Values: !Split ['|', !Ref LoadBalancerPathPattern]
        - !If
          - HasLoadBalancerHostPattern
          - - Field: host-header
              HostHeaderConfig:
                Values: !Split ['|', !Ref LoadBalancerHostPattern]
          - []  # neither LoadBalancerHostPattern nor LoadBalancerPathPattern specified
      # HTTPS Only
      # ListenerArn: !If
      #   - HasLoadBalancerHttps
      #   - {'Fn::ImportValue': !Sub '${ParentClusterStack}-HttpsListener'}
      #   - {'Fn::ImportValue': !Sub '${ParentClusterStack}-HttpListener'}
      ListenerArn: {'Fn::ImportValue': !Sub '${ParentClusterStack}-HttpsListener'}
      Priority: !Ref LoadBalancerPriority
  TaskExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: 'ecs-tasks.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: AmazonECSTaskExecutionRolePolicy  # https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_execution_IAM_role.html
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: !GetAtt 'LogGroup.Arn'
              - Effect: Allow
                Action:
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:BatchGetImage'
                  - 'ecr:GetDownloadUrlForLayer'
                Resource:
                  - {'Fn::ImportValue': !Sub '${ParentECRRepositoryStack}-RepositoryArn'}
                  - !If
                    - HasEnableWiz
                    - !Sub 'arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/wizio/sensor-serverless'
                    - !Ref 'AWS::NoValue'
              - Effect: Allow
                Action:
                  - 'ecr:GetAuthorizationToken'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'ecs:TagResource'
                Resource: '*'
              - !If
                - HasSidecarRepositoryCredentials
                - Effect: Allow
                  Action:
                    - 'secretsmanager:GetSecretValue'
                  Resource:
                    - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${SidecarRepositoryCredentials}-??????'
                - !Ref 'AWS::NoValue'
              - !If
                - HasEnableWiz
                - Effect: Allow
                  Action:
                    - 'secretsmanager:GetSecretValue'
                  Resource:
                    - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${WizApiClientSecret}-??????'
                - !Ref 'AWS::NoValue'
              - !If
                - HasEnableDatadogAgent
                - Effect: Allow
                  Action:
                    - 'secretsmanager:GetSecretValue'
                  Resource:
                    - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${DatadogApiKeySecret}-??????'
                - !Ref 'AWS::NoValue'
  TaskRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: 'ecs-tasks.amazonaws.com'
            Action: 'sts:AssumeRole'
      ManagedPolicyArns: !If [HasTaskPolicies, !Split [',', !Ref TaskPolicies], !Ref 'AWS::NoValue']
  TaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      ContainerDefinitions:
        - !If
          - HasEnableWiz
          - Name: 'wiz-sensor'
            Image: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/wizio/sensor-serverless:v1'
            Essential: false
            LogConfiguration:
              LogDriver: awslogs
              Options:
                'awslogs-region': !Ref 'AWS::Region'
                'awslogs-group': !Ref LogGroup
                'awslogs-stream-prefix': wiz-sensor
          - !Ref 'AWS::NoValue'
        - !If
          - HasEnableFireLens
          - Name: aws-for-fluent-bit
            Image: 'amazon/aws-for-fluent-bit:stable'
            Essential: true
            LogConfiguration:
              LogDriver: awslogs
              Options:
                'awslogs-region': !Ref 'AWS::Region'
                'awslogs-group': !Ref LogGroup
                'awslogs-stream-prefix': aws-for-fluent-bit
            FirelensConfiguration:
              Type: fluentbit
              Options: !If
                - HasFluentBitConfigFile
                - enable-ecs-log-metadata: true
                  config-file-type: file
                  config-file-value: !Sub '${FluentBitConfigFile}'
                - enable-ecs-log-metadata: true
          - !Ref 'AWS::NoValue'
        - !If
          - HasEnableDatadogAgent
          - Name: datadog-agent
            Image: public.ecr.aws/datadog/agent:latest
            Essential: true
            PortMappings:
              - ContainerPort: 8126
            LogConfiguration:
              LogDriver: awslogs
              Options:
                'awslogs-region': !Ref 'AWS::Region'
                'awslogs-group': !Ref LogGroup
                'awslogs-stream-prefix': datadog-agent
            Environment:
              - Name: DD_SERVICE
                Value: !Ref AWS::StackName
              - Name: DD_ENV
                Value: !Select [0, !Split ['-', !Ref AWS::StackName]]
              - Name: DD_API_KEY
                Value: !Sub '{{resolve:secretsmanager:${DatadogApiKeySecret}:SecretString:key}}'
              - Name: ECS_FARGATE
                Value: true
              - Name: DD_APM_ENABLED
                Value: true
              - Name: DD_APM_NON_LOCAL_TRAFFIC
                Value: true
              - Name: DD_CONTAINER_LABELS_AS_TAGS
                Value: true
              - Name: DD_DOGSTATSD_NON_LOCAL_TRAFFIC
                Value: true
              - Name: DD_LOGS_INJECTION
                Value: true
              - Name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
                Value: true
          - !Ref 'AWS::NoValue'
        - !If
          - HasProxyImage
          - Name: proxy
            Image: !Ref ProxyImage
            Essential: true
            Command: !If [HasProxyCommand, !Ref ProxyCommand, !Ref 'AWS::NoValue']
            PortMappings:
              - ContainerPort: !Ref ProxyPort
                Protocol: tcp
            LogConfiguration:
              LogDriver: awslogs
              Options:
                'awslogs-region': !Ref 'AWS::Region'
                'awslogs-group': !Ref LogGroup
                'awslogs-stream-prefix': proxy
            Environment:
              - !If [HasProxyEnvironment1Key, {Name: !Ref ProxyEnvironment1Key, Value: !Ref ProxyEnvironment1Value}, !Ref 'AWS::NoValue']
              - !If [HasProxyEnvironment2Key, {Name: !Ref ProxyEnvironment2Key, Value: !Ref ProxyEnvironment2Value}, !Ref 'AWS::NoValue']
              - !If [HasProxyEnvironment3Key, {Name: !Ref ProxyEnvironment3Key, Value: !Ref ProxyEnvironment3Value}, !Ref 'AWS::NoValue']
          - !Ref 'AWS::NoValue'
        - Name: app
          Image: {'Fn::ImportValue': !Sub '${ParentECRRepositoryStack}-RepositoryUri'}
          Essential: true
          Command: !If [HasAppCommand, !Split [',', !Ref AppCommand], !Ref 'AWS::NoValue']
          User: !If [HasAppUser, !Ref AppUser, !Ref 'AWS::NoValue']
          PortMappings:
            - ContainerPort: !Ref AppPort
              Protocol: tcp
          VolumesFrom:
            - !If
              - HasEnableWiz
              - SourceContainer: 'wiz-sensor'
                ReadOnly: false
              - !Ref 'AWS::NoValue'
          LinuxParameters:
            Capabilities:
              Add:
                - !If [HasEnableWiz, 'SYS_PTRACE', !Ref 'AWS::NoValue']
          LogConfiguration: !If
            - HasAppFireLens
            - LogDriver: awsfirelens
              Options:
                Host: http-intake.logs.datadoghq.com
                Name: datadog
                TLS: 'on'
                apikey: !Sub '{{resolve:secretsmanager:${DatadogApiKeySecret}:SecretString:key}}'
                compress: gzip
                dd_service: !Sub '${AWS::StackName}'
                dd_source: !Sub '${DatadogAgentDDSource}'
                dd_tags: !Sub
                  - 'env:${Environment}'
                  - Environment: !Select [0, !Split ['-', !Ref AWS::StackName]]
                provider: ecs
                retry_limit: '2'
            - LogDriver: awslogs
              Options:
                'awslogs-region': !Ref 'AWS::Region'
                'awslogs-group': !Ref LogGroup
                'awslogs-stream-prefix': app
          Environment:
            - !If
              - HasEnableDatadogAgent
              - Name: AETN_STACKNAME
                Value: !Sub '${AWS::StackName}'
              - !Ref 'AWS::NoValue'
            - !If
              - HasAppEnvironment1Key
              - Name: !Ref AppEnvironment1Key
                Value: !Ref AppEnvironment1Value
              - !Ref 'AWS::NoValue'
            - !If
              - HasAppEnvironment2Key
              - Name: !Ref AppEnvironment2Key
                Value: !Ref AppEnvironment2Value
              - !Ref 'AWS::NoValue'
            - !If
              - HasAppEnvironment3Key
              - Name: !Ref AppEnvironment3Key
                Value: !Ref AppEnvironment3Value
              - !Ref 'AWS::NoValue'
            - !If
              - HasEnableWiz
              - Name: WIZ_API_CLIENT_ID
                Value: !Sub '{{resolve:secretsmanager:${WizApiClientSecret}:SecretString:id}}'
              - !Ref 'AWS::NoValue'
            - !If
              - HasEnableWiz
              - Name: WIZ_API_CLIENT_SECRET
                Value: !Sub '{{resolve:secretsmanager:${WizApiClientSecret}:SecretString:secret}}'
              - !Ref 'AWS::NoValue'
        - !If
          - HasSidecarImage
          - Name: sidecar
            Image: !Ref SidecarImage
            Essential: true
            RepositoryCredentials: !If [HasSidecarRepositoryCredentials, {CredentialsParameter: !Ref SidecarRepositoryCredentials}, !Ref 'AWS::NoValue']
            Command: !If [HasSidecarCommand, !Ref SidecarCommand, !Ref 'AWS::NoValue']
            PortMappings:
              - ContainerPort: !Ref SidecarPort
                Protocol: tcp
            LogConfiguration:
              LogDriver: awslogs
              Options:
                'awslogs-region': !Ref 'AWS::Region'
                'awslogs-group': !Ref LogGroup
                'awslogs-stream-prefix': sidecar
            Environment:
              - !If [HasSidecarEnvironment1Key, {Name: !Ref SidecarEnvironment1Key, Value: !Ref SidecarEnvironment1Value}, !Ref 'AWS::NoValue']
              - !If [HasSidecarEnvironment2Key, {Name: !Ref SidecarEnvironment2Key, Value: !Ref SidecarEnvironment2Value}, !Ref 'AWS::NoValue']
              - !If [HasSidecarEnvironment3Key, {Name: !Ref SidecarEnvironment3Key, Value: !Ref SidecarEnvironment3Value}, !Ref 'AWS::NoValue']
          - !Ref 'AWS::NoValue'
      Cpu: !FindInMap [CpuMap, !Ref Cpu, Cpu]
      Memory: !FindInMap [MemoryMap, !Ref Memory, Memory]
      EphemeralStorage:
        SizeInGiB: !Ref EphemeralStorage
      RuntimePlatform:
        CpuArchitecture: !Ref CpuArchitecture
        OperatingSystemFamily: 'LINUX'
      ExecutionRoleArn: !GetAtt 'TaskExecutionRole.Arn'
      Family: !Ref 'AWS::StackName'
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      TaskRoleArn: !GetAtt 'TaskRole.Arn'
  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      RetentionInDays: !Ref LogsRetentionInDays
  ServiceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub '${AWS::StackName}-service'
      VpcId: {'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'}
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !If [HasProxyImage, !Ref ProxyPort, !Ref AppPort]
          ToPort: !If [HasProxyImage, !Ref ProxyPort, !Ref AppPort]
          SourceSecurityGroupId: {'Fn::ImportValue': !Sub '${ParentClusterStack}-LoadBalancerSecurityGroup'}
  Service:
    DependsOn: LoadBalancerListenerRule
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster: {'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster'}
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
      DesiredCount: !Ref DesiredCount
      HealthCheckGracePeriodSeconds: !Ref HealthCheckGracePeriod
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: !If [HasProxyImage, proxy, app]
          ContainerPort: !If [HasProxyImage, !Ref ProxyPort, !Ref AppPort]
          TargetGroupArn: !Ref TargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: !If [HasSubnetsReachPublic, ENABLED, DISABLED]
          SecurityGroups:
            - !GetAtt ServiceSecurityGroup.GroupId
            - !If [HasClientSecurityGroup1, {'Fn::ImportValue': !Sub '${ParentClientStack1}-SecurityGroupId'}, !Ref 'AWS::NoValue']
            - !If [HasClientSecurityGroup2, {'Fn::ImportValue': !Sub '${ParentClientStack2}-SecurityGroupId'}, !Ref 'AWS::NoValue']
            - !If [HasClientSecurityGroup3, {'Fn::ImportValue': !Sub '${ParentClientStack3}-SecurityGroupId'}, !Ref 'AWS::NoValue']
          Subnets: !Split [',', {'Fn::ImportValue': !Sub '${ParentVPCStack}-Subnets${SubnetsReach}'}]
      PlatformVersion: LATEST
      PropagateTags: SERVICE
      TaskDefinition: !Ref TaskDefinition
  CPUUtilizationTooHighAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: !Sub 'CPU Utilization Higher Than ${CPUUtilizationTooHighAlarmThreshold}%'
      Namespace: 'AWS/ECS'
      MetricName: CPUUtilization
      Dimensions:
        - Name: ClusterName
          Value: {'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster'}
        - Name: ServiceName
          Value: !GetAtt 'Service.Name'
      Statistic: Average
      Period: !Ref CPUUtilizationTooHighAlarmPeriod
      EvaluationPeriods: !Ref CPUUtilizationTooHighAlarmEvaluationPeriods
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: !Ref CPUUtilizationTooHighAlarmThreshold
      TreatMissingData: missing
      AlarmActions:
        - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
      OKActions:
        - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
  MemoryUtilizationTooHighAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: !Sub 'Memory Utilization Higher Than ${MemoryUtilizationTooHighAlarmThreshold}%'
      Namespace: 'AWS/ECS'
      MetricName: MemoryUtilization
      Dimensions:
        - Name: ClusterName
          Value: {'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster'}
        - Name: ServiceName
          Value: !GetAtt 'Service.Name'
      Statistic: Average
      Period: !Ref MemoryUtilizationTooHighAlarmPeriod
      EvaluationPeriods: !Ref MemoryUtilizationTooHighAlarmEvaluationPeriods
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: !Ref MemoryUtilizationTooHighAlarmThreshold
      TreatMissingData: missing
      AlarmActions:
        - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
      OKActions:
        - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
  ServiceFailuresNotification:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        source:
          - aws.ecs
        detail-type:
          - 'ECS Service Action'
        resources:
          - !Ref Service
        detail:
          eventType:
            - ERROR
            - WARN
      State: ENABLED
      Targets:
        - Id: LogGroup
          Arn: !GetAtt 'LogGroup.Arn'
  ServiceFailuresTooHigAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: !Sub '${AWS::StackName} Service Failures Too High'
      Namespace: 'AWS/Events'
      MetricName: TriggeredRules
      Statistic: Sum
      Dimensions:
        - Name: RuleName
          Value: !Ref ServiceFailuresNotification
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 1
      TreatMissingData: notBreaching
      AlarmActions:
        - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
      OKActions:
        - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
  ScalableTargetRole:  # based on http://docs.aws.amazon.com/AmazonECS/latest/developerguide/autoscale_IAM_role.html
    Condition: HasAutoScaling
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 'application-autoscaling.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: AmazonEC2ContainerServiceAutoscaleRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'ecs:DescribeServices'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'ecs:UpdateService'
                Resource: !Sub
                  - 'arn:${AWS::Partition}:ecs:${AWS::Region}:${AWS::AccountId}:service/${ClusterName}/${AWS::StackName}-*'
                  - ClusterName: {'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster'}
        - PolicyName: cloudwatch
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'cloudwatch:DescribeAlarms'
                Resource: '*'
  ScalableTarget:
    Condition: HasAutoScaling
    Type: 'AWS::ApplicationAutoScaling::ScalableTarget'
    Properties:
      MaxCapacity: !Ref MaxCapacity
      MinCapacity: !Ref MinCapacity
      ResourceId: !Sub
        - 'service/${ClusterName}/${ServiceName}'
        - ClusterName: {'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster'}
          ServiceName: !GetAtt 'Service.Name'
      RoleARN: !GetAtt 'ScalableTargetRole.Arn'
      ScalableDimension: 'ecs:service:DesiredCount'
      ServiceNamespace: ecs
  ScaleUpPolicy:
    Condition: HasAutoScaling
    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    Properties:
      PolicyName: !Sub '${AWS::StackName}-scale-up'
      PolicyType: StepScaling
      ScalingTargetId: !Ref ScalableTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: PercentChangeInCapacity
        Cooldown: !Ref ScaleUpPolicyCooldown
        MinAdjustmentMagnitude: 1
        StepAdjustments:
          - MetricIntervalLowerBound: 0
            ScalingAdjustment: !Ref ScaleUpPolicyScalingAdjustment
  ScaleDownPolicy:
    Condition: HasAutoScaling
    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    Properties:
      PolicyName: !Sub '${AWS::StackName}-scale-down'
      PolicyType: StepScaling
      ScalingTargetId: !Ref ScalableTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: PercentChangeInCapacity
        Cooldown: !Ref ScaleDownPolicyCooldown
        MinAdjustmentMagnitude: 1
        StepAdjustments:
          - MetricIntervalUpperBound: 0
            ScalingAdjustment: !Ref ScaleDownPolicyScalingAdjustment
  CPUUtilizationHighAlarm:
    Condition: HasAutoScaling
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Service is running out of CPU'
      Namespace: 'AWS/ECS'
      MetricName: CPUUtilization
      Dimensions:
        - Name: ClusterName
          Value: {'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster'}
        - Name: ServiceName
          Value: !GetAtt 'Service.Name'
      Statistic: Average
      Period: !Ref AutoScalingCPUHighAlarmPeriod
      EvaluationPeriods: !Ref AutoScalingCPUHighAlarmEvaluationPeriods
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: !Ref AutoScalingCPUHighAlarmThreshold
      AlarmActions:
        - !Ref ScaleUpPolicy
  CPUUtilizationLowAlarm:
    Condition: HasAutoScaling
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Service is wasting CPU'
      Namespace: 'AWS/ECS'
      MetricName: CPUUtilization
      Dimensions:
        - Name: ClusterName
          Value: {'Fn::ImportValue': !Sub '${ParentClusterStack}-Cluster'}
        - Name: ServiceName
          Value: !GetAtt 'Service.Name'
      Statistic: Average
      Period: !Ref AutoScalingCPULowAlarmPeriod
      EvaluationPeriods: !Ref AutoScalingCPULowAlarmEvaluationPeriods
      ComparisonOperator: LessThanThreshold
      Threshold: !Ref AutoScalingCPULowAlarmThreshold
      AlarmActions:
        - !Ref ScaleDownPolicy
  TaskFailuresRule:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        source:
          - aws.ecs
        detail-type:
          - ECS Task State Change
        detail:
          clusterArn:
            - {'Fn::ImportValue': !Sub '${ParentClusterStack}-ClusterArn'}
          group:
            - !Sub 'service:${Service.Name}'
          lastStatus:
            - STOPPED
          containers:
            exitCode:
              - exists: false
              - anything-but: 0
      State: ENABLED
      Targets:
        - Id: LogGroup
          Arn: !GetAtt 'LogGroup.Arn'
  TaskFailuresTooHigAlarm:
    Condition: HasAlertTopic
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: !Sub '${AWS::StackName} Task Failures Too High'
      Namespace: 'AWS/Events'
      MetricName: TriggeredRules
      Dimensions:
        - Name: RuleName
          Value: !Ref TaskFailuresRule
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 10
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 1
      TreatMissingData: notBreaching
      AlarmActions:
        - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
      OKActions:
        - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
Outputs:
  TemplateID:
    Description: 'Template Id.'
    Value: 'base/fargate-service-alb.yaml'
  TemplateVersion:
    Description: 'Template Version.'
    Value: '__VERSION__'
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  Service:
    Description: 'Fargate service name.'
    Value: !GetAtt Service.Name
    Export:
      Name: !Sub '${AWS::StackName}-Service'
  ServiceArn:
    Description: 'Fargate service arn.'
    Value: !Ref Service
    Export:
      Name: !Sub '${AWS::StackName}-ServiceArn'
  TargetGroupFullName:
    Description: 'Target Group for the Fargate service.'
    Value: !GetAtt TargetGroup.TargetGroupFullName
    Export:
      Name: !Sub '${AWS::StackName}-TargetGroupFullName'
  LogGroupName:
    Description: 'Log Group for the Fargate service.'
    Value: !Ref LogGroup
    Export:
      Name: !Sub '${AWS::StackName}-LogGroupName'
